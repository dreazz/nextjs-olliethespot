{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["createElement","createRef","PropTypes","WebMercatorViewport","mapboxgl","BaseControl","Marker","MapState","TransitionManager","isGeolocationSupported","LINEAR_TRANSITION_PROPS","Object","assign","defaultProps","transitionDuration","propTypes","className","string","positionOptions","object","fitBoundsOptions","trackUserLocation","bool","showUserLocation","onViewStateChange","func","onViewportChange","GeolocateControl","constructor","props","supportsGeolocation","console","warn","controlOptions","forEach","prop","_mapboxGeolocateControl","_watchState","_geolocateButton","_geolocateButtonRef","current","_updateMarker","_updateCamera","_setup","trigger","position","setState","markerPosition","coords","center","LngLat","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","viewport","_context","_getBounds","fitBounds","zoom","newViewState","mapState","viewState","getViewportProps","type","label","callback","children","key","ref","title","onClick","state","_markerRef","onContextMenu","e","preventDefault","captureDrag","captureDoubleClick","componentDidMount","then","result","_setupMapboxGeolocateControl","componentDidUpdate","markerRef","_dotElement","_containerRef","componentWillUnmount","geolocationWatchID","_geolocationWatchID","undefined","window","navigator","geolocation","clearWatch","_render","_renderMarker","_renderButton","_onClickGeolocate"],"mappings":"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","sourcesContent":["/* global window */\nimport {createElement, createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport mapboxgl from '../utils/mapboxgl';\n\nimport BaseControl from './base-control';\nimport Marker from './marker';\nimport MapState from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nconst LINEAR_TRANSITION_PROPS = Object.assign(\n  {},\n  TransitionManager.defaultProps,\n  {\n    transitionDuration: 500\n  }\n);\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  // mapbox geolocate options\n  positionOptions: null,\n  fitBoundsOptions: null,\n  trackUserLocation: false,\n  showUserLocation: true,\n\n  // viewport handlers\n  onViewStateChange: () => {},\n  onViewportChange: () => {}\n});\n\nexport default class GeolocateControl extends BaseControl {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      supportsGeolocation: null,\n      markerPosition: null\n    };\n  }\n\n  _containerRef: { current: null | HTMLDivElement } = createRef();\n  _geolocateButtonRef: { current: null | HTMLDivElement } = createRef();\n  _markerRef: { current: null | HTMLDivElement } = createRef();\n\n  componentDidMount() {\n    isGeolocationSupported().then(result => {\n      this.setState({supportsGeolocation: result});\n      this._setupMapboxGeolocateControl(result);\n    });\n  }\n\n  componentDidUpdate() {\n    // MapboxGeolocateControl needs manipulate the style of Marker's container\n    const markerRef = this._markerRef.current;\n    if (this._mapboxGeolocateControl && markerRef) {\n      this._mapboxGeolocateControl._dotElement = markerRef._containerRef.current;\n    }\n  }\n\n  componentWillUnmount() {\n    // re-implement MapboxGeolocateControl's _onRemove\n    // clear the geolocation watch if exists\n    const geolocationWatchID = this._mapboxGeolocateControl._geolocationWatchID;\n    if (geolocationWatchID !== undefined) {\n      window.navigator.geolocation.clearWatch(geolocationWatchID);\n      this._mapboxGeolocateControl._geolocationWatchID = undefined;\n    }\n  }\n\n  _setupMapboxGeolocateControl = (supportsGeolocation) => {\n    if (!supportsGeolocation) {\n      /* eslint-disable no-console, no-undef */\n      console.warn(\n        'Geolocation support is not available, the GeolocateControl will not be visible.'\n      );\n      /* eslint-enable no-console, no-undef */\n      return;\n    }\n\n    const controlOptions = {};\n    ['positionOptions', 'fitBoundsOptions', 'trackUserLocation', 'showUserLocation'].forEach(\n      prop => {\n        // For null option, use Mapbox default value\n        if (prop in this.props && this.props[prop] !== null) {\n          controlOptions[prop] = this.props[prop];\n        }\n      }\n    );\n\n    this._mapboxGeolocateControl = new mapboxgl.GeolocateControl(controlOptions);\n\n    // the following re-implement MapboxGeolocateControl's _setupUI\n    // replace mapbox internal prop\n    this._mapboxGeolocateControl._watchState = 'OFF';\n\n    // replace mapbox internal UI elements\n    this._mapboxGeolocateControl._geolocateButton = this._geolocateButtonRef.current;\n\n    // replace mapbox internal methods\n    this._mapboxGeolocateControl._updateMarker = this._updateMarker;\n    this._mapboxGeolocateControl._updateCamera = this._updateCamera;\n\n    this._mapboxGeolocateControl._setup = true;\n  };\n\n  _onClickGeolocate = () => {\n    return this._mapboxGeolocateControl.trigger();\n  };\n\n  _updateMarker = position => {\n    if (position) {\n      this.setState({markerPosition: position.coords});\n    }\n  };\n\n  _getBounds = position => {\n    const center = new mapboxgl.LngLat(\n      position.coords.longitude,\n      position.coords.latitude\n    );\n    const radius = position.coords.accuracy;\n    const bounds = center.toBounds(radius);\n\n    return [\n      [bounds._ne.lng, bounds._ne.lat],\n      [bounds._sw.lng, bounds._sw.lat]\n    ];\n  };\n\n  _updateCamera = position => {\n    const {viewport} = this._context;\n\n    const bounds = this._getBounds(position);\n    const {longitude, latitude, zoom} = new WebMercatorViewport(viewport).fitBounds(bounds);\n\n    const newViewState = Object.assign({}, viewport, {longitude, latitude, zoom});\n    const mapState = new MapState(newViewState);\n    const viewState = Object.assign(\n      {},\n      mapState.getViewportProps(),\n      LINEAR_TRANSITION_PROPS\n    );\n\n    // Call new style callback\n    this.props.onViewStateChange({viewState});\n\n    // Call old style callback\n    this.props.onViewportChange(viewState);\n  };\n\n  _renderButton = (type, label, callback, children) => {\n    return createElement('button', {\n      key: type,\n      className: `mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`,\n      ref: this._geolocateButtonRef,\n      type: 'button',\n      title: label,\n      onClick: callback,\n      children\n    });\n  };\n\n  _renderMarker = () => {\n    const {showUserLocation} = this.props;\n    const {markerPosition} = this.state;\n    if (!showUserLocation || !markerPosition) {\n      return null;\n    }\n\n    return createElement(Marker, {\n      key: 'location-maker',\n      ref: this._markerRef,\n      className: 'mapboxgl-user-location-dot',\n      longitude: markerPosition.longitude,\n      latitude: markerPosition.latitude,\n      onContextMenu: e => e.preventDefault(),\n      captureDrag: false,\n      captureDoubleClick: false\n    });\n  };\n\n  _render() {\n    if (!this.state.supportsGeolocation) {\n      return null;\n    }\n\n    const {className} = this.props;\n    return createElement(\n      'div',\n      {\n        className: `mapboxgl-ctrl mapboxgl-ctrl-group ${className}`,\n        ref: this._containerRef,\n        onContextMenu: e => e.preventDefault()\n      },\n      [\n        this._renderMarker(),\n        this._renderButton('geolocate', 'Geolocate', this._onClickGeolocate)\n      ]\n    );\n  }\n}\n"],"file":"geolocate-control.js"}